@function rem($value) {
    $remvalue: $value;
    @if (type-of($value) == number) {
        $remvalue: ($value / 16) + rem;
    }
    @return $remvalue;
};

@function random-rgb() {
    @return rgb(random(255), random(255), random(255))
}

$primary-font:Segoe UI Historic, Segoe UI, Helvetica, Arial, sans-serif;
$primary-background:#f0f0f0;
$icon-color:#656565;
$icon-background-color:#e4e4e4;
$active-color:#1b75ef;

$primary-padding: rem(10);
$sidebar-width: rem(360);
$feed-width: rem(700);

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body
{
    background-color: $primary-background;
    font-family: $primary-font;

    &::before {
        content:'';
        display: block;
        height: rem(80);
    }
}

.page-content {
    &__right,&__left{
        .wrapper { 
                position: sticky;
                top: 0;
        }
    }
}


@mixin flex($justify:center,$align:center,$gab:10) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    gap: rem($gab);
}

@mixin round-box($size,$bg-color){
    border: none;
    height: rem($size);
    padding: rem($size / 2);
    border-radius: rem($size / 2);
    background-color: $bg-color;
}
@mixin img-round ($size,$radius:50%) {
    width: rem($size);
    height: rem($size);
    border-radius: $radius;
    object-fit: cover;
}
@mixin circle-icon($size,$radius:50%) {
    width: rem($size);
    height: rem($size);
    border-radius: $radius;
    
}
@mixin Component_box($margin:unset, $padding:unset,$radius:10) {
    margin: rem($margin) 0;
    padding: rem($padding);
    border-radius: rem($radius);
    box-shadow: 0 2px 2px #00000020;
}
%contant_left{
    @include flex (left, center, 5);
    font-size:1rem;
    font-weight: 500;
    padding: rem(5) 0;
}

.input-box{
    &__text{
        @include flex(space-between,center,10);

        label{width: 100%}

        input{
            @include round-box(40,#efefef);
            width: inherit;
            font-size: rem(15);
        }
    }
}
